name: Auto update gRPC and protobuf messages from definition
on:
  push:
    branches:
      - main
    paths:
        - '*.proto'
  workflow_dispatch:

env:
    apt_dependencies: >-
        protobuf-compiler

jobs:
  update-grpc:
    name: Update from proto files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y ${{ env.apt_dependencies }}
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - name: Install code generator for Go
        working-directory: ${{ env.TMPDIR }}
        run: |
          set -eu

          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      - name: Install code generator for python
        working-directory: ${{ env.TMPDIR }}
        run: |
          set -eu

          pip install grpcio-tools==1.62.1
      - name: Generate go code
        run: |
          set -eu

          PATH=$PATH:$(go env GOPATH)/bin protoc --proto_path=. --go_out=. --go_opt=paths=source_relative \
                                                 --go-grpc_out=. --go-grpc_opt=paths=source_relative \
                                                 --experimental_allow_proto3_optional \
                                                 hostagent.proto
      - name: Generate python code
        run: |
          set -eu

          python -m grpc_tools.protoc -I. --python_out=. --pyi_out=. --grpc_python_out=. \
                                          --experimental_allow_proto3_optional \
                                          hostagent.proto
      - name: Check if any generated file has been modified
        run: |
          set -eu

          # Any new file needs to be considered as empty.
          git add -N .

          # Ignore modification time and protoc version.
          hasModifications=`git difftool -y -x "diff -Nup -I 'modTime' -I '^//.*protoc.*v'"`

          if [ -z "${hasModifications}" ]; then
            exit 0
          fi

          echo "A modification has been detected at least in one file. Full unfiltered diff:"
          git diff

          echo "hasModifications=true" >> $GITHUB_ENV
      - name: Create Pull Request for tracking
        if: ${{ env.hasModifications == 'true' }}
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update files generated from protobuf definition
          title: Auto update files api bindings
          labels: protobuf, automated pr
          body: "[Auto-generated pull request](https://github.com/canonical/landscape-agent-api/actions/workflows/auto-update-grpc.yaml) by GitHub Action"
          branch: auto-update-grpc
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Push branch
        if: ${{ env.hasModifications == 'true' }}
        run: |
          git push origin auto-update-grpc:main
